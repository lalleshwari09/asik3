import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class DatabaseManager {
    private static final String URL = "jdbc:postgresql://localhost:5432/Online_Shopping_System";
    private static final String USER = "postgres";
    private static final String PASSWORD = "598041";

    private Connection connect() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }

    public void addItem(Item item) {
        String sql = "INSERT INTO items (product_id, name, price) VALUES (?, ?, ?)";
        try (Connection conn = connect(); PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, item.getProductId());
            stmt.setString(2, item.getName());
            stmt.setDouble(3, item.getPrice());
            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void addCustomer(Customer customer) {
        String sql = "INSERT INTO customers (customer_id, name, number) VALUES (?, ?, ?)";
        try (Connection conn = connect(); PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, customer.getCustomerid());
            stmt.setString(2, customer.getName());
            stmt.setLong(3, customer.getNumber());
            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void addOrder(Order order) {
        String sql = "INSERT INTO orders (order_id, product_id, quantity, customer_id) VALUES (?, ?, ?, ?)";
        try (Connection conn = connect(); PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, order.getOrderId());
            stmt.setInt(2, order.getProduct().getProductId());
            stmt.setInt(3, order.getQuantity());
            stmt.setInt(4, order.getCustomer().getCustomerid());
            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public List<Order> getAllOrders() {
        List<Order> orders = new ArrayList<>();
        String sql = "SELECT o.order_id, i.product_id, i.name AS product_name, i.price, o.quantity, c.customer_id, c.name AS customer_name, c.number FROM orders o JOIN items i ON o.product_id = i.product_id JOIN customers c ON o.customer_id = c.customer_id";
        try (Connection conn = connect(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
            while (rs.next()) {
                int orderId = rs.getInt("order_id");
                int productId = rs.getInt("product_id");
                String productName = rs.getString("product_name");
                double price = rs.getDouble("price");
                int quantity = rs.getInt("quantity");
                int customerId = rs.getInt("customer_id");
                String customerName = rs.getString("customer_name");
                long customerNumber = rs.getLong("number");

                Item item = new Item(productId, productName, price);
                Customer customer = new Customer(customerId, customerName, customerNumber);
                orders.add(new Order(orderId, item, quantity, customer));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return orders;
    }

    public void deleteItem(int productId) {
        String sql = "DELETE FROM items WHERE product_id = ?";
        try (Connection conn = connect(); PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, productId);
            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void deleteCustomer(int customerId) {
        String sql = "DELETE FROM customers WHERE customer_id = ?";
        try (Connection conn = connect(); PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, customerId);
            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void updateItem(int oldProductId, Item newItem) {
        String sql = "UPDATE items SET name = ?, price = ? WHERE product_id = ?";
        try (Connection conn = connect(); PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, newItem.getName());
            stmt.setDouble(2, newItem.getPrice());
            stmt.setInt(3, oldProductId);
            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void updateCustomer(int oldCustomerId, Customer newCustomer) {
        String sql = "UPDATE customers SET name = ?, number = ? WHERE customer_id = ?";
        try (Connection conn = connect(); PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, newCustomer.getName());
            stmt.setLong(2, newCustomer.getNumber());
            stmt.setInt(3, oldCustomerId);
            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
